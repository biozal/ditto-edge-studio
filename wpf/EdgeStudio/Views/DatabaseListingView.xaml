<UserControl x:Class="EdgeStudio.Views.DatabaseListingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:EdgeStudio.Views"
             mc:Ignorable="d"
             d:DesignHeight="800" d:DesignWidth="1200">
    <Grid Background="{DynamicResource BackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <!-- Header with Title and Add Database Button -->
        <Border Grid.Row="0" 
                Background="{DynamicResource SecondaryBackgroundBrush}" 
                BorderBrush="{DynamicResource BorderBrush}"
                BorderThickness="0,0,0,1">
            <Grid Margin="15,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <Label Grid.Column="0"
                       Content="Database Configurations" 
                       FontSize="20" 
                       FontWeight="Bold"
                       VerticalAlignment="Center"
                       Style="{DynamicResource ThemedLabel}"/>
                
                <Button Grid.Column="1"
                        Content="Add Database"
                        Command="{Binding AddDatabaseCommand}"
                        Padding="15,8"
                        Style="{DynamicResource ThemedButton}"/>
            </Grid>
        </Border>
        
        <!-- Main Content -->
        <Grid Grid.Row="1" Margin="15">
            <!-- Database List -->
            <ScrollViewer VerticalScrollBarVisibility="Auto"
                          HorizontalScrollBarVisibility="Disabled">
                <ItemsControl ItemsSource="{Binding DatabaseConfigs}"
                              x:Name="DatabaseItemsControl">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Background="{DynamicResource SecondaryBackgroundBrush}"
                                    BorderBrush="{DynamicResource BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="8"
                                    Margin="0,0,0,15"
                                    Padding="20"
                                    Cursor="Hand">
                                <Border.InputBindings>
                                    <MouseBinding MouseAction="LeftClick" 
                                                  Command="{Binding DataContext.SelectDatabaseCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                  CommandParameter="{Binding}"/>
                                </Border.InputBindings>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="10"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <!-- Database Name -->
                                    <TextBlock Grid.Row="0" Grid.Column="0"
                                               Text="{Binding Name}"
                                               FontSize="18"
                                               FontWeight="Bold"
                                               Style="{DynamicResource ThemedTextBlock}"/>
                                    
                                    <!-- Action Buttons -->
                                    <StackPanel Grid.Row="0" Grid.Column="1"
                                                Orientation="Horizontal"
                                                HorizontalAlignment="Right">
                                        <Button Content="Edit"
                                                Margin="0,0,8,0"
                                                Padding="12,4"
                                                Command="{Binding DataContext.EditDatabaseCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                CommandParameter="{Binding}"
                                                Style="{DynamicResource ThemedButton}"/>
                                        <Button Content="Delete"
                                                Padding="12,4"
                                                Command="{Binding DataContext.DeleteDatabaseCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                CommandParameter="{Binding}"
                                                Style="{DynamicResource ThemedButton}"/>
                                    </StackPanel>
                                    
                                    <!-- Database ID -->
                                    <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                                                Orientation="Horizontal"
                                                Margin="0,0,0,8">
                                        <TextBlock Text="Database ID: "
                                                   FontWeight="SemiBold"
                                                   Style="{DynamicResource ThemedTextBlock}"/>
                                        <Button Content="***************"
                                                Background="Transparent"
                                                BorderThickness="0"
                                                Cursor="Hand"
                                                FontFamily="Consolas"
                                                Tag="{Binding DatabaseId}"
                                                Click="ShowSecureField_Click"
                                                Style="{DynamicResource ThemedButton}"/>
                                    </StackPanel>
                                    
                                    <!-- Auth Token -->
                                    <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"
                                                Orientation="Horizontal">
                                        <TextBlock Text="Auth Token: "
                                                   FontWeight="SemiBold"
                                                   Style="{DynamicResource ThemedTextBlock}"/>
                                        <Button Content="***************"
                                                Background="Transparent"
                                                BorderThickness="0"
                                                Cursor="Hand"
                                                FontFamily="Consolas"
                                                Tag="{Binding AuthToken}"
                                                Click="ShowSecureField_Click"
                                                Style="{DynamicResource ThemedButton}"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
            
            <!-- Empty State Message -->
            <Grid x:Name="EmptyStateMessage">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasDatabaseConfigs}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <TextBlock Text="No database configurations registered.&#x0a;Click 'Add Database' to get started."
                           FontSize="16"
                           Foreground="{DynamicResource DisabledBrush}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           TextAlignment="Center"/>
            </Grid>
        </Grid>
        
        <!-- Error Message Popup -->
        <Popup x:Name="ErrorPopup" 
               Placement="Center"
               PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType=UserControl}}"
               StaysOpen="False"
               AllowsTransparency="True">
            <Border Background="{DynamicResource SecondaryBackgroundBrush}"
                    BorderBrush="Red"
                    BorderThickness="2"
                    CornerRadius="5"
                    Padding="15"
                    MaxWidth="400">
                <StackPanel>
                    <TextBlock Text="Error"
                               FontWeight="Bold"
                               Foreground="Red"
                               FontSize="14"
                               Margin="0,0,0,8"/>
                    <TextBlock x:Name="ErrorMessageText"
                               TextWrapping="Wrap"
                               Style="{DynamicResource ThemedTextBlock}"/>
                    <Button Content="OK"
                            HorizontalAlignment="Right"
                            Margin="0,10,0,0"
                            Click="CloseErrorPopup_Click"
                            Style="{DynamicResource ThemedButton}"/>
                </StackPanel>
            </Border>
        </Popup>
        
        <!-- Add/Edit Database Popup -->
        <Popup x:Name="DatabaseFormPopup"
               Placement="Center"
               PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType=UserControl}}"
               StaysOpen="True"
               AllowsTransparency="True">
            <Border Background="{DynamicResource SecondaryBackgroundBrush}"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="2"
                    CornerRadius="8"
                    Padding="25"
                    Width="700">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    
                    <!-- Title -->
                    <TextBlock Grid.Row="0"
                               x:Name="DatabaseFormTitle"
                               Text="Edit Ditto App Config"
                               FontSize="20"
                               FontWeight="Bold"
                               Margin="0,0,0,20"
                               Style="{DynamicResource ThemedTextBlock}"/>
                    
                    <!-- Form Fields -->
                    <ScrollViewer Grid.Row="1" 
                                  VerticalScrollBarVisibility="Auto"
                                  MaxHeight="500"
                                  Padding="0,0,15,0">
                        <StackPanel Margin="0,0,5,0">
                            <!-- Mode Selector -->
                            <StackPanel Margin="0,0,0,20">
                                <Label Content="Mode" 
                                       FontWeight="SemiBold" 
                                       Margin="0,0,0,8"
                                       Style="{DynamicResource ThemedLabel}"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <!-- Online Playground Button -->
                                    <RadioButton Grid.Column="0"
                                                 x:Name="OnlinePlaygroundRadio"
                                                 GroupName="ModeSelection"
                                                 IsChecked="{Binding DatabaseFormModel.IsOnlineMode}"
                                                 Margin="0,0,5,0">
                                        <RadioButton.Template>
                                            <ControlTemplate TargetType="RadioButton">
                                                <Border x:Name="Border"
                                                        Background="{DynamicResource BackgroundBrush}"
                                                        BorderBrush="{DynamicResource BorderBrush}"
                                                        BorderThickness="1"
                                                        CornerRadius="4"
                                                        Padding="15,10">
                                                    <TextBlock x:Name="OnlineText"
                                                               Text="Online Playground"
                                                               HorizontalAlignment="Center"
                                                               FontWeight="SemiBold"
                                                               Foreground="{DynamicResource ForegroundBrush}"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
                                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ForegroundBrush}"/>
                                                        <Setter TargetName="OnlineText" Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ForegroundBrush}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </RadioButton.Template>
                                    </RadioButton>
                                    
                                    <!-- Offline Button -->
                                    <RadioButton Grid.Column="1"
                                                 x:Name="OfflineRadio"
                                                 GroupName="ModeSelection"
                                                 IsChecked="{Binding DatabaseFormModel.IsOfflineMode}"
                                                 Margin="5,0,0,0">
                                        <RadioButton.Template>
                                            <ControlTemplate TargetType="RadioButton">
                                                <Border x:Name="Border"
                                                        Background="{DynamicResource BackgroundBrush}"
                                                        BorderBrush="{DynamicResource BorderBrush}"
                                                        BorderThickness="1"
                                                        CornerRadius="4"
                                                        Padding="15,10">
                                                    <TextBlock x:Name="OfflineText"
                                                               Text="Offline"
                                                               HorizontalAlignment="Center"
                                                               FontWeight="SemiBold"
                                                               Foreground="{DynamicResource ForegroundBrush}"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
                                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ForegroundBrush}"/>
                                                        <Setter TargetName="OfflineText" Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ForegroundBrush}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </RadioButton.Template>
                                    </RadioButton>
                                </Grid>
                            </StackPanel>
                            
                            <!-- Basic Information Section -->
                            <TextBlock Text="Basic Information" 
                                       FontSize="14"
                                       FontWeight="SemiBold"
                                       Margin="0,10,0,10"
                                       Style="{DynamicResource ThemedTextBlock}"/>
                            
                            <!-- Name -->
                            <StackPanel Margin="0,0,0,15">
                                <Label Content="Name" 
                                       FontWeight="Normal" 
                                       Margin="0,0,0,5"
                                       Style="{DynamicResource ThemedLabel}"/>
                                <TextBox x:Name="NameTextBox"
                                         Text="{Binding DatabaseFormModel.Name, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{DynamicResource ThemedTextBox}"/>
                            </StackPanel>
                            
                            <!-- Authorization Information Section -->
                            <TextBlock Text="Authorization Information" 
                                       FontSize="14"
                                       FontWeight="SemiBold"
                                       Margin="0,10,0,10"
                                       Style="{DynamicResource ThemedTextBlock}"/>
                            
                            <!-- Database ID (AppID in macOS) -->
                            <StackPanel Margin="0,0,0,15">
                                <Label Content="DatabaseId" 
                                       FontWeight="Normal" 
                                       Margin="0,0,0,5"
                                       Style="{DynamicResource ThemedLabel}"/>
                                <TextBox x:Name="DatabaseIdTextBox"
                                         Text="{Binding DatabaseFormModel.DatabaseId, UpdateSourceTrigger=PropertyChanged}"
                                         FontFamily="Consolas"
                                         Style="{DynamicResource ThemedTextBox}"/>
                            </StackPanel>
                            
                            <!-- Auth Token (Playground Token in macOS) -->
                            <StackPanel Margin="0,0,0,15">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DatabaseFormModel.IsOfflineMode}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <Label Content="Auth Token" 
                                       FontWeight="Normal" 
                                       Margin="0,0,0,5"
                                       Style="{DynamicResource ThemedLabel}"/>
                                <TextBox x:Name="AuthTokenTextBox"
                                         Text="{Binding DatabaseFormModel.AuthToken, UpdateSourceTrigger=PropertyChanged}"
                                         FontFamily="Consolas"
                                         Style="{DynamicResource ThemedTextBox}"/>
                            </StackPanel>
                            
                            <!-- Ditto Server (BigPeer) Information Section - Only for Online Mode -->
                            <StackPanel>
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DatabaseFormModel.IsOfflineMode}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                
                                <TextBlock Text="Ditto Server (BigPeer) Information" 
                                           FontSize="14"
                                           FontWeight="SemiBold"
                                           Margin="0,10,0,10"
                                           Style="{DynamicResource ThemedTextBlock}"/>
                                
                                <!-- Auth URL -->
                                <StackPanel Margin="0,0,0,15">
                                    <Label Content="Auth URL" 
                                           FontWeight="Normal" 
                                           Margin="0,0,0,5"
                                           Style="{DynamicResource ThemedLabel}"/>
                                    <TextBox x:Name="AuthUrlTextBox"
                                             Text="{Binding DatabaseFormModel.AuthUrl, UpdateSourceTrigger=PropertyChanged}"
                                             FontFamily="Consolas"
                                             Style="{DynamicResource ThemedTextBox}"/>
                                </StackPanel>
                                
                            </StackPanel>
                            
                            <!-- Ditto Server - HTTP API - Optional Section - Only for Online Mode -->
                            <StackPanel>
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DatabaseFormModel.IsOfflineMode}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                
                                <TextBlock Text="Ditto Server - HTTP API - Optional" 
                                           FontSize="14"
                                           FontWeight="SemiBold"
                                           Margin="0,10,0,10"
                                           Style="{DynamicResource ThemedTextBlock}"/>
                                
                                <!-- HTTP API URL -->
                                <StackPanel Margin="0,0,0,15">
                                    <Label Content="HTTP API URL" 
                                           FontWeight="Normal" 
                                           Margin="0,0,0,5"
                                           Style="{DynamicResource ThemedLabel}"/>
                                    <TextBox x:Name="HttpApiUrlTextBox"
                                             Text="{Binding DatabaseFormModel.HttpApiUrl, UpdateSourceTrigger=PropertyChanged}"
                                             FontFamily="Consolas"
                                             Style="{DynamicResource ThemedTextBox}"/>
                                </StackPanel>
                                
                                <!-- HTTP API Key -->
                                <StackPanel Margin="0,0,0,15">
                                    <Label Content="HTTP API Key" 
                                           FontWeight="Normal" 
                                           Margin="0,0,0,5"
                                           Style="{DynamicResource ThemedLabel}"/>
                                    <TextBox x:Name="HttpApiKeyTextBox"
                                             Text="{Binding DatabaseFormModel.HttpApiKey, UpdateSourceTrigger=PropertyChanged}"
                                             FontFamily="Consolas"
                                             Style="{DynamicResource ThemedTextBox}"/>
                                </StackPanel>
                            </StackPanel>
                            
                            <!-- Allow Untrusted Certs -->
                            <CheckBox x:Name="AllowUntrustedCertsCheckBox"
                                      Content="Allow untrusted certificates"
                                      IsChecked="{Binding DatabaseFormModel.AllowUntrustedCerts}"
                                      Margin="0,10,0,0"
                                      ToolTip="By allowing untrusted certificates, you are bypassing SSL certificate validation entirely, which poses significant security risks. This setting should only be used in development environments and never in production.">
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                                        <Setter Property="FontSize" Value="14"/>
                                        <Setter Property="Padding" Value="6,0,0,0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="CheckBox">
                                                    <Grid Background="Transparent">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        
                                                        <!-- Checkbox visual -->
                                                        <Border Grid.Column="0"
                                                                x:Name="CheckBoxBorder"
                                                                Width="16"
                                                                Height="16"
                                                                Background="{DynamicResource BackgroundBrush}"
                                                                BorderBrush="{DynamicResource BorderBrush}"
                                                                BorderThickness="1"
                                                                CornerRadius="2"
                                                                VerticalAlignment="Center"
                                                                Margin="0,0,6,0">
                                                            <Path x:Name="CheckMark"
                                                                  Data="M 0 2 L 2 4 L 6 0"
                                                                  Stroke="{DynamicResource TextBrush}"
                                                                  StrokeThickness="2"
                                                                  Visibility="Collapsed"
                                                                  HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center"/>
                                                        </Border>
                                                        
                                                        <!-- Text content -->
                                                        <TextBlock Grid.Column="1"
                                                                   Text="{TemplateBinding Content}"
                                                                   Foreground="{DynamicResource TextBrush}"
                                                                   VerticalAlignment="Center"
                                                                   FontSize="{TemplateBinding FontSize}"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                                            <Setter TargetName="CheckBoxBorder" Property="Background" Value="{DynamicResource BorderBrush}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{DynamicResource TextBrush}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{DynamicResource DisabledBrush}"/>
                                                            <Setter TargetName="CheckMark" Property="Stroke" Value="{DynamicResource DisabledBrush}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DatabaseFormModel.IsOfflineMode}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                        </StackPanel>
                    </ScrollViewer>
                    
                    <!-- Buttons -->
                    <StackPanel Grid.Row="2"
                                Orientation="Horizontal"
                                HorizontalAlignment="Right"
                                Margin="0,20,0,0">
                        <Button x:Name="CancelButton"
                                Content="Cancel"
                                Margin="0,0,10,0"
                                Padding="20,10"
                                Click="CancelDatabaseForm_Click"
                                Style="{DynamicResource ThemedButton}"/>
                        <Button x:Name="SaveButton"
                                Content="Save"
                                Padding="20,10"
                                Command="{Binding SaveDatabaseCommand}"
                                Style="{DynamicResource ThemedButton}"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Popup>
    </Grid>
</UserControl>