<Application xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             x:Class="EdgeStudio.App"
             xmlns:local="using:EdgeStudio"
             xmlns:themes="clr-namespace:Material.Styles.Themes;assembly=Material.Styles">
             <!-- "Default" ThemeVariant follows system theme variant. "Dark" or "Light" are other available options. -->

    <Application.DataTemplates>
        <local:ViewLocator/>
    </Application.DataTemplates>
  
    <Application.Styles>
        <themes:MaterialTheme BaseTheme="Inherit" PrimaryColor="Indigo" SecondaryColor="Pink" />
        
        <!-- Global Material Design Card Styles - Clean, modern appearance -->
        
        <!-- Standard Material Card with subtle elevation -->
        <Style Selector="Border.material-card">
            <Setter Property="Background" Value="{DynamicResource MaterialSurfaceBrush}"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Margin" Value="0,0,0,24"/>
            <Setter Property="Padding" Value="24"/>
            <!-- Subtle shadow for clean Material Design look -->
            <Setter Property="BoxShadow" Value="0 1 3 0 #20000000"/>
        </Style>
        <Style Selector="Border.material-card:pointerover">
            <Setter Property="BoxShadow" Value="0 2 6 0 #30000000"/>
        </Style>
        
        <!-- Elevated Material Card with proper theme support -->
        <Style Selector="Border.material-card-elevated">
            <Setter Property="Background" Value="{DynamicResource VSCodeCardBackgroundBrush}"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Margin" Value="0,0,0,24"/>
            <Setter Property="Padding" Value="24"/>
            <!-- Slightly more pronounced shadow for elevated cards -->
            <Setter Property="BoxShadow" Value="0 2 4 0 #25000000"/>
            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDividerBrush}"/>
            <Setter Property="BorderThickness" Value="0.5"/>
        </Style>
        <Style Selector="Border.material-card-elevated:pointerover">
            <Setter Property="BoxShadow" Value="0 4 8 0 #35000000"/>
        </Style>
        
        <!-- Card text styling uses Material theme resources for proper contrast -->
        <Style Selector="Border.material-card TextBlock, Border.material-card-elevated TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource MaterialBodyBrush}"/>
        </Style>
        
    </Application.Styles>
    
    <Application.Resources>
        <!-- Custom VS Code-like colors for dark mode -->
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Dark">
                    <!-- VS Code Dark Mode Colors -->
                    <SolidColorBrush x:Key="VSCodeMainBackgroundBrush" Color="#181818"/>
                    <SolidColorBrush x:Key="VSCodeHeaderBackgroundBrush" Color="#1F1F1F"/>
                    <SolidColorBrush x:Key="VSCodeDetailBackgroundBrush" Color="#1F1F1F"/>
                    <SolidColorBrush x:Key="VSCodeStatusBarBackgroundBrush" Color="#181818"/>
                    <SolidColorBrush x:Key="VSCodeCardBackgroundBrush" Color="#1F1F1F"/>
                </ResourceDictionary>
                <ResourceDictionary x:Key="Light">
                    <!-- Light Mode - Use Material theme colors as fallback -->
                    <StaticResource x:Key="VSCodeMainBackgroundBrush" ResourceKey="MaterialBackgroundBrush"/>
                    <StaticResource x:Key="VSCodeHeaderBackgroundBrush" ResourceKey="MaterialSurfaceBrush"/>
                    <StaticResource x:Key="VSCodeDetailBackgroundBrush" ResourceKey="MaterialBackgroundBrush"/>
                    <StaticResource x:Key="VSCodeStatusBarBackgroundBrush" ResourceKey="MaterialPrimaryBrush"/>
                    <StaticResource x:Key="VSCodeCardBackgroundBrush" ResourceKey="MaterialCardBackgroundBrush"/>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>